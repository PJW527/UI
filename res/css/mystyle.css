* {
    box-sizing : border-box;
}


html {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
}

main::after {
    content: "";
    display: table;
    clear: both;             /*        float 뒷처리 공식 */
}


/* 속성 선택자  */
/* [속성명 = "속성값"] - 해당하는 속성값과 동일할 경우 아래의 css 속성 적용 */
/* 
    = : 속성값이 동일할 경우 적용
    ~= : 속성값이 포함된 경우 적용 (단어 기준)
    |= : 속성값으로 시작하는 경우 적용(단어나 단어- 일 경우 가능)
        class|="col" -> <h1 class="col"> (O) , <h1 class="col-abc"> (O) , <h1 class="col abc"> (X)
    ^= : 속성값으로 시작하는 경우 적용(문자열 기준)
        class^="col" -> <h1 class="col"> (O) , <h1 class="col-abc"> (O) , <h1 class="col abc"> (O)
    $= : 속성값으로 끝나는 경우 적용(문자열 기준)
    *= : 속성값이 포함될 경우 적용(문자열 기준)
*/

/*  속성 선택자를 사용, class*="col-"는 속성이 class이고 값이 col-가 포함된 경우 적용 */
[class*="col-"] {
    float: left;
    padding: 15px;
}

header {
    background-color: #9933cc;
    color: white;
    padding: 15px;                 /*      보라색 자체가 넓어지는가? 박스 주변의 크기가 늘어나는가? */
                                    /* 보라색의 크기가 늘어났다. 이로써 padding은 박스영역의 크기 자체, margin은 박스 주변의 여유공간 크기를 조절할수 있다는 것을 알수있다. */               
}


main .menu ul{
    list-style-type: none;
    margin: 0;
    padding: 0;
}

main .menu li {
    padding: 8px;                   /* 상자 내 영역 넓히기 */
    margin-bottom: 8px;             /* 상자간 거리 띄우기 */
    background-color: #33b5e5;
    color: white;
    /* box-shadow: 좌우측그림자, 상하측그림자, 흐림정도, 색상 */
    box-shadow: 0px 1px 3px rgba(0,0,0,0.12), 0px 1px 2px rgba(0,0,0,0.24);
}


main .menu li:hover {
    background-color: #0099cc;
}


.right {
    background-color: #33b5e5;
    padding: 15px;
    color: white;
    text-align: center;
    font-size: 14px;
    box-shadow: 0px 1px 3px rgba(0,0,0,0.12), 0px 1px 2px rgba(0,0,0,0.24);
}


footer {
    background-color: #0099cc;
    color: white;
    text-align: center;
    font-size: 12px;
    padding: 15px;
}

/* 기본 스마트폰 화면 */
/* 디바이스의 최소 너비가 600 또는 768 미만일 경우 아래의 css 속성 적용 */
[class*="col-"] {
    width: 100%;
}


    /* 태블릿 화면 */
    /* 600px 까지는 아래의 css 속성 적용. 600보다 더 내려가면 위의 width: 100% 속성으로 적용 */
@media only screen and (min-width:600px) {


    .col-s-1 {width: 8.33%}
    .col-s-2 {width: 16.66%}
    .col-s-3 {width: 25%}
    .col-s-4 {width: 33.33%}
    .col-s-5 {width: 41.66%}
    .col-s-6 {width: 50%}
    .col-s-7 {width: 58.33%}
    .col-s-8 {width: 66.66%}
    .col-s-9 {width: 75%}
    .col-s-10 {width: 83.33%}
    .col-s-11 {width: 91.66%}
    .col-s-12 {width: 100%}



}
    /* 데스크탑 화면 */
    /* 미디어쿼리를 사용하여 디바이스의 화면 크기에 따라 css 속성을 변경하여 출력 */
    /* @media : 대충 미디어쿼리를 사용한다는 의미 */
    /* only : 조건을 사용한다는 의미 */
    /* screen : 디바이스의 종류 */
    /* and : 조건을 추가한다는 의미. */
    /* (min-width: 768px) : 디바이스의 최소 너비가 768보다 클 경우 아래의 css 속성 적용. 
                            반대로, 768보다 작다면 맨 위의 기본 스마트폰 화면 width: 100%가 적용됨
                            이렇게 보면 오른쪽 사이드바는 768을 기준으로, 왼쪽 사이드바는 600을 기준으로 화면이 바뀜 */
@media only screen and (min-width:768px) {

    /* grid 시스템을 적용하여 화면의 너비를 설정한 내용 */
    /* grid 시스템 : 웹의 화면으로 총 12개의 column으로 나누어서 화면을 디자인하는 방식 */
    /*  웹 화면 구성시 하나의 라인을 12개의 칸으로 구분한다 */
    /*  col3, col6, col3 으로 나눴으면 화면을 세로로 공평하게 12등분한뒤 중앙에서 6개 칸을 먹고 사이드에서 3칸을 먹음 */
    /*  □ □ □ ■ ■ ■ ■ ■ ■ □ □ □*/
    .col-1 {width: 8.33%}
    .col-2 {width: 16.66%}
    .col-3 {width: 25%}
    .col-4 {width: 33.33%}
    .col-5 {width: 41.66%}
    .col-6 {width: 50%}
    .col-7 {width: 58.33%}
    .col-8 {width: 66.66%}
    .col-9 {width: 75%}
    .col-10 {width: 83.33%}
    .col-11 {width: 91.66%}
    .col-12 {width: 100%}                 /*      .col-s-12 와 .col-12 구분 주의      */

    
}


